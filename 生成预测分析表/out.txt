原文法表示：
for循环 =
  | for ( 赋值函数 表达式 ; 后缀表达式 ) { 函数块 } 
while循环 =
  | while ( 表达式 ) { 函数块 } 
变量 =
  | 标志符 数组下标 
变量闭包 =
  | , 变量 赋初值 变量闭包 
  | $ 
标志符 =
  | id 
表达式 =
  | 因子 项 
  | ! 因子 项 
参数 =
  | 标志符 
  | 数字 
  | 字符串 
参数闭包 =
  | , 参数 参数闭包 
  | $ 
参数列表 =
  | 参数 参数闭包 
参数声明 =
  | 声明 声明闭包 
  | $ 
读语句 =
  | read ( 因式 ) ; 
多个数据 =
  | 数字 数字闭包 
否则语句 =
  | else { 函数块 } 
  | $ 
赋初值 =
  | = 右值 
  | $ 
赋值函数 =
  | 变量 赋值或函数调用 
赋值或函数调用 =
  | = 右值 ; 
  | ( 参数列表 ) ; 
函数定义 =
  | 类型 变量 ( 参数声明 ) { 函数块 } 
函数返回 =
  | return 因式 ; 
函数块 =
  | 声明语句闭包 函数块闭包 
函数块闭包 =
  | 赋值函数 函数块闭包 
  | for循环 函数块闭包 
  | while循环 函数块闭包 
  | 条件语句 函数块闭包 
  | 读语句 函数块闭包 
  | 写语句 函数块闭包 
  | 函数返回 函数块闭包 
  | $ 
后缀表达式 =
  | 变量 后缀运算符 
后缀运算符 =
  | ++ 
  | -- 
类型 =
  | type 
逻辑运算符 =
  | < 
  | > 
  | == 
  | != 
  | >= 
  | <= 
  | && 
  | || 
声明 =
  | 类型 变量 赋初值 
声明闭包 =
  | , 声明 声明闭包 
  | $ 
声明语句 =
  | 声明 变量闭包 ; 
声明语句闭包 =
  | 声明语句 声明语句闭包 
  | $ 
数字 =
  | number 
数字闭包 =
  | , 数字 数字闭包 
  | $ 
数组下标 =
  | [ 因式 ] 
  | $ 
条件语句 =
  | if ( 表达式 ) { 函数块 } 否则语句 
项 =
  | + 因子 项 
  | - 因子 项 
  | 逻辑运算符 因子 项 
  | $ 
写语句 =
  | write ( 因式 ) ; 
因式 =
  | ( 表达式 ) 
  | 变量 
  | 数字 
  | 字符串 
因式递归 =
  | * 因式 因式递归 
  | / 因式 因式递归 
  | % 因式 因式递归 
  | $ 
因子 =
  | 因式 因式递归 
右值 =
  | 表达式 
  | { 多个数据 } 
字符串 =
  | string 

FIRST集合：
for循环: for, 
while循环: while, 
变量: id, 
变量闭包: $, ,, 
标志符: id, 
表达式: !, (, id, number, string, 
参数: id, number, string, 
参数闭包: $, ,, 
参数列表: id, number, string, 
参数声明: $, type, 
读语句: read, 
多个数据: number, 
否则语句: $, else, 
赋初值: $, =, 
赋值函数: id, 
赋值或函数调用: (, =, 
函数定义: type, 
函数返回: return, 
函数块: $, for, id, if, read, return, type, while, write, 
函数块闭包: $, for, id, if, read, return, while, write, 
后缀表达式: id, 
后缀运算符: ++, --, 
类型: type, 
逻辑运算符: !=, &&, <, <=, ==, >, >=, ||, 
声明: type, 
声明闭包: $, ,, 
声明语句: type, 
声明语句闭包: $, type, 
数字: number, 
数字闭包: $, ,, 
数组下标: $, [, 
条件语句: if, 
项: !=, $, &&, +, -, <, <=, ==, >, >=, ||, 
写语句: write, 
因式: (, id, number, string, 
因式递归: $, %, *, /, 
因子: (, id, number, string, 
右值: !, (, id, number, string, {, 
字符串: string, 

FOLLOW集合：
for循环: for, id, if, read, return, while, write, }, 
while循环: for, id, if, read, return, while, write, }, 
变量: !=, %, &&, (, ), *, +, ++, ,, -, --, /, ;, <, <=, =, ==, >, >=, ], ||, 
变量闭包: ;, 
标志符: !=, %, &&, (, ), *, +, ++, ,, -, --, /, ;, <, <=, =, ==, >, >=, [, ], ||, 
表达式: ), ,, ;, 
参数: ), ,, 
参数闭包: ), 
参数列表: ), 
参数声明: ), 
读语句: for, id, if, read, return, while, write, }, 
多个数据: }, 
否则语句: for, id, if, read, return, while, write, }, 
赋初值: ), ,, ;, 
赋值函数: !, (, for, id, if, number, read, return, string, while, write, }, 
赋值或函数调用: !, (, for, id, if, number, read, return, string, while, write, }, 
函数定义: #, 
函数返回: for, id, if, read, return, while, write, }, 
函数块: }, 
函数块闭包: }, 
后缀表达式: ), 
后缀运算符: ), 
类型: id, 
逻辑运算符: (, id, number, string, 
声明: ), ,, 
声明闭包: ), 
声明语句: for, id, if, read, return, type, while, write, }, 
声明语句闭包: for, id, if, read, return, while, write, }, 
数字: !=, %, &&, ), *, +, ,, -, /, ;, <, <=, ==, >, >=, ], ||, }, 
数字闭包: }, 
数组下标: !=, %, &&, (, ), *, +, ++, ,, -, --, /, ;, <, <=, =, ==, >, >=, ], ||, 
条件语句: for, id, if, read, return, while, write, }, 
项: ), ,, ;, 
写语句: for, id, if, read, return, while, write, }, 
因式: !=, %, &&, ), *, +, ,, -, /, ;, <, <=, ==, >, >=, ], ||, 
因式递归: !=, &&, ), +, ,, -, ;, <, <=, ==, >, >=, ||, 
因子: !=, &&, ), +, ,, -, ;, <, <=, ==, >, >=, ||, 
右值: ), ,, ;, 
字符串: !=, %, &&, ), *, +, ,, -, /, ;, <, <=, ==, >, >=, ], ||, 

SELECT集合：
for循环->for(赋值函数表达式;后缀表达式){函数块}: for, 
while循环->while(表达式){函数块}: while, 
变量->标志符数组下标: id, 
变量闭包->$: ;, 
变量闭包->,变量赋初值变量闭包: ,, 
标志符->id: id, 
表达式->!因子项: !, 
表达式->因子项: (, id, number, string, 
参数->标志符: id, 
参数->数字: number, 
参数->字符串: string, 
参数闭包->$: ), 
参数闭包->,参数参数闭包: ,, 
参数列表->参数参数闭包: id, number, string, 
参数声明->$: ), 
参数声明->声明声明闭包: type, 
读语句->read(因式);: read, 
多个数据->数字数字闭包: number, 
否则语句->$: for, id, if, read, return, while, write, }, 
否则语句->else{函数块}: else, 
赋初值->$: ), ,, ;, 
赋初值->=右值: =, 
赋值函数->变量赋值或函数调用: id, 
赋值或函数调用->(参数列表);: (, 
赋值或函数调用->=右值;: =, 
函数定义->类型变量(参数声明){函数块}: type, 
函数返回->return因式;: return, 
函数块->声明语句闭包函数块闭包: for, id, if, read, return, type, while, write, }, 
函数块闭包->$: }, 
函数块闭包->for循环函数块闭包: for, 
函数块闭包->while循环函数块闭包: while, 
函数块闭包->读语句函数块闭包: read, 
函数块闭包->赋值函数函数块闭包: id, 
函数块闭包->函数返回函数块闭包: return, 
函数块闭包->条件语句函数块闭包: if, 
函数块闭包->写语句函数块闭包: write, 
后缀表达式->变量后缀运算符: id, 
后缀运算符->++: ++, 
后缀运算符->--: --, 
类型->type: type, 
逻辑运算符->!=: !=, 
逻辑运算符->&&: &&, 
逻辑运算符-><: <, 
逻辑运算符-><=: <=, 
逻辑运算符->==: ==, 
逻辑运算符->>: >, 
逻辑运算符->>=: >=, 
逻辑运算符->||: ||, 
声明->类型变量赋初值: type, 
声明闭包->$: ), 
声明闭包->,声明声明闭包: ,, 
声明语句->声明变量闭包;: type, 
声明语句闭包->$: for, id, if, read, return, while, write, }, 
声明语句闭包->声明语句声明语句闭包: type, 
数字->number: number, 
数字闭包->$: }, 
数字闭包->,数字数字闭包: ,, 
数组下标->$: !=, %, &&, (, ), *, +, ++, ,, -, --, /, ;, <, <=, =, ==, >, >=, ], ||, 
数组下标->[因式]: [, 
条件语句->if(表达式){函数块}否则语句: if, 
项->$: ), ,, ;, 
项->+因子项: +, 
项->-因子项: -, 
项->逻辑运算符因子项: !=, &&, <, <=, ==, >, >=, ||, 
写语句->write(因式);: write, 
因式->(表达式): (, 
因式->变量: id, 
因式->数字: number, 
因式->字符串: string, 
因式递归->$: !=, &&, ), +, ,, -, ;, <, <=, ==, >, >=, ||, 
因式递归->%因式因式递归: %, 
因式递归->*因式因式递归: *, 
因式递归->/因式因式递归: /, 
因子->因式因式递归: (, id, number, string, 
右值->{多个数据}: {, 
右值->表达式: !, (, id, number, string, 
字符串->string: string, 

LL(1)文法预测分析表: 
     for   while      id       ;       ,       !       (  number  string       )    type    read      if  return   write       }    else       =      ++      --      !=      &&       <      <=      ==       >      >=      ||       %       *       +       -       /       ]       [       {
for循环  for(赋值函数表达式;后缀表达式){函数块}                                                                                                                                                                                                                                                                                                                                                                
while循环            while(表达式){函数块}                                                                                                                                                                                                                                                                                                                                                      
变量                         标志符数组下标                                                                                                                                                                                                                                                                                                                                            
变量闭包                                $         ,变量赋初值变量闭包                                                                                                                                                                                                                                                                                                                        
标志符                       id                                                                                                                                                                                                                                                                                                                                                  
表达式                       因子项                        !因子项   因子项    因子项    因子项                                                                                                                                                                                                                                                                                  
参数                         标志符                                            数字      字符串                                                                                                                                                                                                                                                                                  
参数闭包                                          ,参数参数闭包                                          $                                                                                                                                                                                                                                                                             
参数列表                      参数参数闭包                                          参数参数闭包  参数参数闭包                                                                                                                                                                                                                                                                                
参数声明                                                                                            $         声明声明闭包                                                                                                                                                                                                                                                            
读语句                                                                                                                 read(因式);                                                                                                                                                                                                                                                  
多个数据                                                                        数字数字闭包                                                                                                                                                                                                                                                                                          
否则语句  $         $         $                                                                                         $         $         $         $         $         else{函数块}                                                                                                                                                                                                
赋初值                                 $         $                                                 $                                                                               =右值                                                                                                                                                                                         
赋值函数                      变量赋值或函数调用                                                                                                                                                                                                                                                                                                                                            
赋值或函数调用                                                              (参数列表);                                                                                                      =右值;                                                                                                                                                                                        
函数定义                                                                                                      类型变量(参数声明){函数块}                                                                                                                                                                                                                                                            
函数返回                                                                                                                                    return因式;                                                                                                                                                                                                                              
函数块   声明语句闭包函数块闭包  声明语句闭包函数块闭包  声明语句闭包函数块闭包                                                                        声明语句闭包函数块闭包  声明语句闭包函数块闭包  声明语句闭包函数块闭包  声明语句闭包函数块闭包  声明语句闭包函数块闭包  声明语句闭包函数块闭包                                                                                                                                                                                                          
函数块闭包  for循环函数块闭包  while循环函数块闭包  赋值函数函数块闭包                                                                                  读语句函数块闭包  条件语句函数块闭包  函数返回函数块闭包  写语句函数块闭包  $                                                                                                                                                                                                                 
后缀表达式                      变量后缀运算符                                                                                                                                                                                                                                                                                                                                            
后缀运算符                                                                                                                                                                                      ++        --                                                                                                                                                                        
类型                                                                                                         type                                                                                                                                                                                                                                                                
逻辑运算符                                                                                                                                                                                                          !=        &&        <         <=        ==        >         >=        ||                                                                                        
声明                                                                                                         类型变量赋初值                                                                                                                                                                                                                                                            
声明闭包                                          ,声明声明闭包                                          $                                                                                                                                                                                                                                                                             
声明语句                                                                                                      声明变量闭包;                                                                                                                                                                                                                                                            
声明语句闭包  $         $         $                                                                               声明语句声明语句闭包  $         $         $         $         $                                                                                                                                                                                                                 
数字                                                                           number                                                                                                                                                                                                                                                                                            
数字闭包                                          ,数字数字闭包                                                                                                      $                                                                                                                                                                                                                 
数组下标                                $         $                   $                             $                                                                               $         $         $         $         $         $         $         $         $         $         $         $         $         $         $         $         $         [因式]              
条件语句                                                                                                                          if(表达式){函数块}否则语句                                                                                                                                                                                                                                        
项                                     $         $                                                 $                                                                                                             逻辑运算符因子项  逻辑运算符因子项  逻辑运算符因子项  逻辑运算符因子项  逻辑运算符因子项  逻辑运算符因子项  逻辑运算符因子项  逻辑运算符因子项                      +因子项   -因子项                                           
写语句                                                                                                                                               write(因式);                                                                                                                                                                                                                    
因式                         变量                                    (表达式)  数字      字符串                                                                                                                                                                                                                                                                                  
因式递归                                $         $                                                 $                                                                                                             $         $         $         $         $         $         $         $         %因式因式递归  *因式因式递归  $         $         /因式因式递归                                
因子                         因式因式递归                                因式因式递归  因式因式递归  因式因式递归                                                                                                                                                                                                                                                                                
右值                         表达式                        表达式    表达式    表达式    表达式                                                                                                                                                                                                                                                                        {多个数据}  
字符串                                                                                   string                                                                                                                                                                                                                                                                                  
