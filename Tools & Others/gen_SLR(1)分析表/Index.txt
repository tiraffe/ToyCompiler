<函数定义> -> <类型> <变量> ( <参数声明> ) { <函数块> } 
<类型> -> type 
<变量> -> <标志符> <数组下标> 
<标志符> -> id 
<数组下标> -> [ <因式> ] 
<数组下标> -> $ 
<因式> -> ( <表达式> ) 
<因式> -> <变量> 
<因式> -> <数字> 
<因式> -> <字符串> 
<数字> -> number 
<表达式> -> <因子> <项> 
<因子> -> <因式> <因式递归> 
<因式递归> -> * <因式> <因式递归> 
<因式递归> -> / <因式> <因式递归> 
<因式递归> -> % <因式> <因式递归> 
<因式递归> -> $ 
<项> -> + <因子> <项> 
<项> -> - <因子> <项> 
<项> -> $ 
<参数声明> -> <声明> <声明闭包> 
<参数声明> -> $ 
<声明> -> <类型> <变量> <赋初值> 
<赋初值> -> = <右值> 
<赋初值> -> $ 
<右值> -> <表达式> 
<右值> -> { <多个数据> } 
<多个数据> -> <数字> <数字闭包> 
<变量闭包> -> , <变量> <赋初值> <变量闭包> 
<变量闭包> -> $ 
<数字闭包> -> , <数字> <数字闭包> 
<数字闭包> -> $ 
<声明闭包> -> , <声明> <声明闭包> 
<声明闭包> -> $ 
<函数块> -> <声明语句闭包> <函数块闭包> 
<声明语句闭包> -> <声明语句> <声明语句闭包> 
<声明语句闭包> -> $ 
<声明语句> -> <声明> <变量闭包> ; 
<函数块闭包> -> <赋值函数> <函数块闭包> 
<函数块闭包> -> <for循环> <函数块闭包> 
<函数块闭包> -> <while循环> <函数块闭包> 
<函数块闭包> -> <条件语句> <函数块闭包> 
<函数块闭包> -> <读语句> <函数块闭包> 
<函数块闭包> -> <写语句> <函数块闭包> 
<函数块闭包> -> <函数返回> <函数块闭包> 
<函数块闭包> -> $ 
<读语句> -> read ( <因式> ) ; 
<写语句> -> write ( <因式> ) ; 
<while循环> -> while ( <逻辑表达式> ) { <函数块> } 
<赋值函数> -> <变量> <赋值或函数调用> 
<赋值或函数调用> -> = <右值> ; 
<赋值或函数调用> -> ( <参数列表> ) ; 
<参数列表> -> <参数> <参数闭包> 
<参数闭包> -> , <参数> <参数闭包> 
<参数闭包> -> $ 
<参数> -> <标志符> 
<参数> -> <数字> 
<参数> -> <字符串> 
<字符串> -> string 
<for循环> -> for ( <赋值函数> <逻辑表达式> ; <后缀表达式> ) { <函数块> } 
<逻辑表达式> -> <表达式> <逻辑运算符> <表达式> 
<逻辑运算符> -> < 
<逻辑运算符> -> > 
<逻辑运算符> -> == 
<逻辑运算符> -> != 
<逻辑运算符> -> >= 
<逻辑运算符> -> <= 
<逻辑运算符> -> && 
<逻辑运算符> -> || 
<后缀表达式> -> <变量> <后缀运算符> 
<后缀运算符> -> ++ 
<后缀运算符> -> -- 
<条件语句> -> if ( <逻辑表达式> ) { <函数块> } <否则语句> 
<否则语句> -> else { <函数块> } 
<否则语句> -> $ 
<函数返回> -> return <因式> ; 
